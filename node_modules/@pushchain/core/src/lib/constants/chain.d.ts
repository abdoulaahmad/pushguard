import { CHAIN, PUSH_NETWORK, VM } from './enums';
/**
 * Maps VM type to its namespace
 * References -
 * https://chainagnostic.org/CAIPs/caip-2
 */
export declare const VM_NAMESPACE: Record<VM, string>;
/**
 * Maps Push Network → VM → UEA implementation address.
 */
export declare const UEA_PROXY: Record<PUSH_NETWORK, `0x${string}`>;
/**
 * Canonical metadata for each chain supported by the SDK.
 * Acts as a single source of truth for chainId, vm type, locker contract, etc.
 * References -
 * https://namespaces.chainagnostic.org/solana/caip2
 */
export declare const CHAIN_INFO: Record<CHAIN, {
    chainId: string;
    vm: VM;
    lockerContract?: string;
    defaultRPC: string[];
    confirmations: number;
    timeout: number;
}>;
/**
 * Extra required info regarding Push Chain
 */
export declare const PUSH_CHAIN_INFO: Record<CHAIN.PUSH_MAINNET | CHAIN.PUSH_TESTNET_DONUT | CHAIN.PUSH_LOCALNET, (typeof CHAIN_INFO)[CHAIN.PUSH_MAINNET] & {
    denom: string;
    tendermintRpc: string;
    prefix: string;
    factoryAddress: `0x${string}`;
    pushDecimals: bigint;
    usdcDecimals: bigint;
    pushToUsdcNumerator: bigint;
    pushToUsdcDenominator: bigint;
}>;
