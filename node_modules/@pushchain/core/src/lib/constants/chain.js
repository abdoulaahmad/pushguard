"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PUSH_CHAIN_INFO = exports.CHAIN_INFO = exports.UEA_PROXY = exports.VM_NAMESPACE = void 0;
const enums_1 = require("./enums");
const chains_1 = require("viem/chains");
/**
 * Maps VM type to its namespace
 * References -
 * https://chainagnostic.org/CAIPs/caip-2
 */
exports.VM_NAMESPACE = {
    [enums_1.VM.EVM]: 'eip155',
    [enums_1.VM.SVM]: 'solana',
};
/**
 * Maps Push Network → VM → UEA implementation address.
 */
exports.UEA_PROXY = {
    [enums_1.PUSH_NETWORK.MAINNET]: '0xTBD',
    [enums_1.PUSH_NETWORK.TESTNET_DONUT]: '0x523294411f0CBFE40Ff8B7b415ef0e92f01ac38f',
    [enums_1.PUSH_NETWORK.TESTNET]: '0x523294411f0CBFE40Ff8B7b415ef0e92f01ac38f',
    [enums_1.PUSH_NETWORK.LOCALNET]: '0x2FE70447492307108Bdc7Ff6BaB33Ff37Dacc479',
};
/**
 * Canonical metadata for each chain supported by the SDK.
 * Acts as a single source of truth for chainId, vm type, locker contract, etc.
 * References -
 * https://namespaces.chainagnostic.org/solana/caip2
 */
exports.CHAIN_INFO = {
    // Push
    [enums_1.CHAIN.PUSH_MAINNET]: {
        chainId: 'TBD',
        vm: enums_1.VM.EVM,
        defaultRPC: [''],
        confirmations: 6,
        timeout: 30000,
    },
    [enums_1.CHAIN.PUSH_TESTNET_DONUT]: {
        chainId: '42101',
        vm: enums_1.VM.EVM,
        defaultRPC: [
            'https://evm.rpc-testnet-donut-node1.push.org/',
            'https://evm.rpc-testnet-donut-node2.push.org/',
        ],
        confirmations: 3,
        timeout: 30000,
    },
    [enums_1.CHAIN.PUSH_LOCALNET]: {
        chainId: '9000',
        vm: enums_1.VM.EVM,
        defaultRPC: ['http://localhost:8545'],
        confirmations: 3,
        timeout: 30000,
    },
    // Ethereum
    [enums_1.CHAIN.ETHEREUM_MAINNET]: {
        chainId: '1',
        vm: enums_1.VM.EVM,
        lockerContract: 'TBD',
        defaultRPC: [chains_1.mainnet.rpcUrls.default.http[0]],
        confirmations: 6,
        timeout: 60000,
    },
    [enums_1.CHAIN.ETHEREUM_SEPOLIA]: {
        chainId: '11155111',
        vm: enums_1.VM.EVM,
        lockerContract: '0x05bD7a3D18324c1F7e216f7fBF2b15985aE5281A',
        defaultRPC: [chains_1.sepolia.rpcUrls.default.http[0]],
        confirmations: 1,
        timeout: 30000,
    },
    // Solana
    [enums_1.CHAIN.SOLANA_MAINNET]: {
        chainId: '5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp',
        vm: enums_1.VM.SVM,
        lockerContract: 'TBD',
        defaultRPC: [''],
        confirmations: 6,
        timeout: 15000,
    },
    [enums_1.CHAIN.SOLANA_TESTNET]: {
        chainId: '4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z',
        vm: enums_1.VM.SVM,
        lockerContract: '',
        defaultRPC: ['https://api.testnet.solana.com'],
        confirmations: 6,
        timeout: 15000,
    },
    [enums_1.CHAIN.SOLANA_DEVNET]: {
        chainId: 'EtWTRABZaYq6iMfeYKouRu166VU2xqa1',
        vm: enums_1.VM.SVM,
        lockerContract: '3zrWaMknHTRQpZSxY4BvQxw9TStSXiHcmcp3NMPTFkke',
        defaultRPC: ['https://api.devnet.solana.com'],
        confirmations: 1,
        timeout: 5000,
    },
};
/**
 * Extra required info regarding Push Chain
 */
exports.PUSH_CHAIN_INFO = {
    [enums_1.CHAIN.PUSH_MAINNET]: Object.assign(Object.assign({}, exports.CHAIN_INFO[enums_1.CHAIN.PUSH_MAINNET]), { denom: 'upc', tendermintRpc: 'TBD', prefix: 'push', factoryAddress: '0xTBD', pushDecimals: BigInt(1e18), usdcDecimals: BigInt(1e8), pushToUsdcNumerator: BigInt(1e7), pushToUsdcDenominator: BigInt(1e18) }),
    [enums_1.CHAIN.PUSH_TESTNET_DONUT]: Object.assign(Object.assign({}, exports.CHAIN_INFO[enums_1.CHAIN.PUSH_TESTNET_DONUT]), { denom: 'upc', tendermintRpc: 'https://rpc-testnet-donut-node1.push.org/', prefix: 'push', factoryAddress: '0x00000000000000000000000000000000000000eA', pushDecimals: BigInt(1e18), usdcDecimals: BigInt(1e8), pushToUsdcNumerator: BigInt(1e7), pushToUsdcDenominator: BigInt(1e18) }),
    [enums_1.CHAIN.PUSH_LOCALNET]: Object.assign(Object.assign({}, exports.CHAIN_INFO[enums_1.CHAIN.PUSH_LOCALNET]), { denom: 'upc', tendermintRpc: 'http://localhost:26657', prefix: 'push', factoryAddress: '0x00000000000000000000000000000000000000eA', pushDecimals: BigInt(1e18), usdcDecimals: BigInt(1e8), pushToUsdcNumerator: BigInt(1e7), pushToUsdcDenominator: BigInt(1e18) }),
};
//# sourceMappingURL=chain.js.map