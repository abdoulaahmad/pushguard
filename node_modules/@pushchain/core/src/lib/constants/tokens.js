"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PAYABLE_TOKENS = exports.MOVEABLE_TOKENS = exports.PayableTokenAccessor = exports.MoveableTokenAccessor = void 0;
const enums_1 = require("./enums");
// Strongly-typed accessors that throw at runtime if a token is unavailable,
// while providing non-undefined types at compile time.
class MoveableTokenAccessor {
    constructor(tokens) {
        this.tokens = tokens;
    }
    require(name) {
        const t = this.tokens[name];
        if (!t)
            throw new Error(`${String(name)} token not available on this chain`);
        return t;
    }
    get ETH() {
        return this.require('ETH');
    }
    get USDC() {
        return this.require('USDC');
    }
    get USDT() {
        return this.require('USDT');
    }
    get UNI() {
        return this.require('UNI');
    }
    get WETH() {
        return this.require('WETH');
    }
    get SOL() {
        return this.require('SOL');
    }
}
exports.MoveableTokenAccessor = MoveableTokenAccessor;
class PayableTokenAccessor {
    constructor(tokens) {
        this.tokens = tokens;
    }
    require(name) {
        const t = this.tokens[name];
        if (!t)
            throw new Error(`${String(name)} token not available on this chain`);
        return t;
    }
    get ETH() {
        return this.require('ETH');
    }
    get USDC() {
        return this.require('USDC');
    }
    get USDT() {
        return this.require('USDT');
    }
    get DAI() {
        return this.require('DAI');
    }
    get PEPE() {
        return this.require('PEPE');
    }
    get UNI() {
        return this.require('UNI');
    }
    get WETH() {
        return this.require('WETH');
    }
    get SOL() {
        return this.require('SOL');
    }
}
exports.PayableTokenAccessor = PayableTokenAccessor;
// Native token sentinel addresses
const EVM_NATIVE = '0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee';
// Minimal initial registries. These can be extended safely without breaking the API.
exports.MOVEABLE_TOKENS = {
    // Ethereum Sepolia (testnet)
    [enums_1.CHAIN.ETHEREUM_SEPOLIA]: [
        {
            symbol: 'ETH',
            decimals: 18,
            address: EVM_NATIVE,
            mechanism: 'native',
        },
        // Sepolia USDC
        {
            symbol: 'USDC',
            decimals: 6,
            address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',
            mechanism: 'approve',
        },
        {
            symbol: 'USDT',
            decimals: 6,
            address: '0x7169D38820dfd117C3FA1f22a697dBA58d90BA06',
            mechanism: 'approve',
        },
        // Sepolia WETH9
        {
            symbol: 'WETH',
            decimals: 18,
            address: '0xfff9976782d46cc05630d1f6ebab18b2324d6b14',
            mechanism: 'approve',
        },
    ],
    // Ethereum Mainnet (placeholder addresses for now)
    [enums_1.CHAIN.ETHEREUM_MAINNET]: [
        {
            symbol: 'ETH',
            decimals: 18,
            address: EVM_NATIVE,
            mechanism: 'native',
        },
        {
            symbol: 'USDC',
            decimals: 6,
            address: '0xA0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
            mechanism: 'approve',
        },
        {
            symbol: 'USDT',
            decimals: 6,
            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            mechanism: 'approve',
        },
        // Mainnet WETH
        {
            symbol: 'WETH',
            decimals: 18,
            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
            mechanism: 'approve',
        },
        // Mainnet UNI
        {
            symbol: 'UNI',
            decimals: 18,
            address: '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984',
            mechanism: 'approve',
        },
    ],
    // Solana Devnet (decimals are per SPL mint; addresses TBD)
    [enums_1.CHAIN.SOLANA_DEVNET]: [
        { symbol: 'SOL', decimals: 9, address: 'native', mechanism: 'native' },
        { symbol: 'USDC', decimals: 6, address: 'TBD', mechanism: 'approve' },
        { symbol: 'USDT', decimals: 6, address: 'TBD', mechanism: 'approve' },
    ],
};
exports.PAYABLE_TOKENS = {
    // For now mirror moveable; can extend with additional payable-only tokens (e.g., DAI, PEPE)
    [enums_1.CHAIN.ETHEREUM_SEPOLIA]: [
        {
            symbol: 'ETH',
            decimals: 18,
            address: EVM_NATIVE,
            mechanism: 'native',
        },
        // Sepolia USDC
        {
            symbol: 'USDC',
            decimals: 6,
            address: '0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238',
            mechanism: 'approve',
        },
        {
            symbol: 'USDT',
            decimals: 6,
            address: '0x7169D38820dfd117C3FA1f22a697dBA58d90BA06',
            mechanism: 'approve',
        },
        // Sepolia WETH9
        {
            symbol: 'WETH',
            decimals: 18,
            address: '0xfff9976782d46cc05630d1f6ebab18b2324d6b14',
            mechanism: 'approve',
        },
    ],
    [enums_1.CHAIN.ETHEREUM_MAINNET]: [
        {
            symbol: 'ETH',
            decimals: 18,
            address: EVM_NATIVE,
            mechanism: 'native',
        },
        {
            symbol: 'USDC',
            decimals: 6,
            address: '0xA0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',
            mechanism: 'approve',
        },
        {
            symbol: 'USDT',
            decimals: 6,
            address: '0xdAC17F958D2ee523a2206206994597C13D831ec7',
            mechanism: 'approve',
        },
        // Mainnet WETH
        {
            symbol: 'WETH',
            decimals: 18,
            address: '0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2',
            mechanism: 'approve',
        },
        // Mainnet UNI
        {
            symbol: 'UNI',
            decimals: 18,
            address: '0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984',
            mechanism: 'approve',
        },
    ],
    [enums_1.CHAIN.SOLANA_DEVNET]: [
        { symbol: 'SOL', decimals: 9, address: 'native', mechanism: 'native' },
        { symbol: 'USDC', decimals: 6, address: 'TBD', mechanism: 'approve' },
        { symbol: 'USDT', decimals: 6, address: 'TBD', mechanism: 'approve' },
    ],
};
//# sourceMappingURL=tokens.js.map